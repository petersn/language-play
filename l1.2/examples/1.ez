# Simple example!

Inductive nat : Type0 :=
	| O : nat
	| S : nat -> nat.

Definition apply_twice := fun (T : Type0) (f : T -> T) (x : T) => (f (f x)).

Infer nat::S.

Infer nat.

Infer apply_twice.

Eval apply_twice nat nat::S nat::O.

Infer apply_twice nat nat::S.

#Definition foo := Type0.
#Definition bar := Type1.
#Axiom x : foo.
#Eval x.
#Infer x.
#Check x : foo.

